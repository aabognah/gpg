title 'Foo Config'

# root Key
describe file('/tmp/gpg_batch_config_foo') do
  it { should exist }
  its(:content) { should match(/%commit/) }
  its(:content) { should match(/foo/) }
end

describe file('/tmp/gpg_batch_config_bar') do
  it { should exist }
  its(:content) { should match(/%commit/) }
  its(:content) { should match(/bar/) }
end

describe service('haveged') do
  it { should be_installed }
  it { should be_running }
end

describe bash('sudo -u root -i gpg2 --list-keys') do
  its('exit_status') { should eq 0 }
  its('stdout') { should match /Chef Generated Default \(foo\) \(generated by Chef\)/ }
  its('stdout') { should match /Chef Generated Default \(bar\) \(generated by Chef\)/ }
end

# Vagrant Key
describe file('/tmp/vagrant_config') do
  it { should exist }
  its(:content) { should match(/%commit/) }
  its(:content) { should match(/vagrant/) }
end

describe bash('sudo -u vagrant -i gpg2 --list-keys') do
  its('exit_status') { should eq 0 }
  its('stdout') { should match /vagrant \(vagrant test key\)/ }
end
